options:
	maxgens: 30
	interval: 5 seconds

on load:
	makeGen(1, "Test", coal block, coal, 25, "&8", 0, 200)
	makeGen(2, "Test", iron block, iron ingot, 25, "&f", 100, 300)

command /sellwand [<number>]:
	trigger:
		set {_cel} to makeSellwand(arg-1)
		give {_cel} to player

on right click:
	if line 1 of lore of player's held item contains "Sellwand":
		cancel event
		set {_} to inventory of clicked block
		loop all items in {_}:
			set {_dropvalue} to int tag "dropSettings;Output" of nbt compound of loop-item
			set {_amount} to item amount of loop-item
			add {_dropvalue} * {_amount} to {_amt}
			set loop-item to air
		if {_amt} is set:
			add {_amt} to player's balance
		send action bar "&8[&a!&8]&f You've sold all your items for &2$&a%modules_format({_amt} ? 0)%" to player
# SELLWAND ^

command /sell:
	trigger:
		loop all items in player's inventory:
			set {_dropvalue} to int tag "dropSettings;Output" of nbt compound of loop-item
			set {_amount} to item amount of loop-item
			add {_dropvalue} * {_amount} to {_}
			set loop-item to air
		if {_} is set:
			add {_} to player's balance
		send action bar "&8[&a!&8]&f You've sold all your items for &2$&a%modules_format({_} ? 0)%" 

every {@interval}:
	loop all players:
		if "%{private::genslotsused::%loop-player's uuid%}%" contains "-":
			set {_fix} to 0
		loop {private::gens::%loop-player's uuid%::allgens::*}:
			add 1 to {_fix}
			set {_int} to int tag "genSettings;Tier" of nbt compound of block at loop-value-2
			set {_output} to {public::gens::%{_int}%::output}
			if {_int} is set:
				set {_location} to block at loop-value-2
				add 1 to y coord of {_location}
				set {_drop} to {public::gens::%{_int}%::drop}
				set int tag "dropSettings;Output" of nbt compound of {_drop} to {_output}
				drop {_drop} at {_location} without velocity
		if {_fix} is not 0:
			set {private::genslotsused::%loop-player's uuid%} to {_fix}

on right click:
	if player is sneaking:
		set {_tier} to int tag "genSettings;Tier" of nbt compound of event-block
		set {_text} to string tag "genSettings;Player" of nbt compound of event-block
		if {_text} is "%player%":
			if {public::gens::%{_tier} + 1%} is set:
				set {_price} to {public::gens::%{_tier}%::price}
				if player's balance >= {_price}:
					set {_tier} to {_tier} + 1
					remove {_price} from player's balance
					set event-block to type of {public::gens::%{_tier}%::genblock}
					set int tag "genSettings;Tier" of nbt compound of event-block to {_tier}
					set string tag "genSettings;Player" of nbt compound of event-block to {_text}
					# MESSAGES
					send action bar "&8[&a!&8] &fUpgraded generator tier To %{_tier}%" to player
				else:
					set {_cash} to {_price} - player's balance 
					send action bar "&8[&c!&8] &fYou need &2$&a%modules_format({_cash})% &fTo upgrade" to player
			else:
				send action bar "&8[&c!&8] &fThis Generator is maxed!" to player
		
on place:
	if line 1 of lore of player's held item contains "Generator":
		if event is not canceled:
			# GET VALUES
			set {_tier} to uncolored line 5 of lore of player's held item
			replace "|" and " " and "Tier" and ":" with "" in {_tier}
			set {_tier} to {_tier} parsed as int
			# NBT
			set int tag "genSettings;Tier" of nbt compound of event-block to {_tier}  
			set {_int} to int tag "genSettings;Tier" of nbt compound of event-block
			set string tag "genSettings;Player" of nbt compound of event-block to "%player%"
			set {_text} to string tag "genSettings;Player" of nbt compound of event-block
			# Code
			add location at event-block to {private::gens::%player's uuid%::allgens::*}
			add 1 to {private::genslotsused::%player's uuid%}
			send action bar "&8[&a!&8]&f Generator Placed! &8[&f%{private::genslotsused::%player's uuid%} ? 0%&6/&f%{@maxgens} + {private::genslots::%player's uuid%}%&f&8]" to player
			draw 20 of poof at event-block with extra 0.5
			# DEBUG
			#send {_int} to player
			#send {_text} to player

on left click:
	set {_tier} to int tag "genSettings;Tier" of nbt compound of event-block
	if {_tier} is set:
		set event-block to air
		remove location at event-block from {private::gens::%player's uuid%::allgens::*}
		remove 1 from {private::genslotsused::%player's uuid%}
		send action bar "&8[&a!&8]&f Generator Removed! &8[&f%{private::genslotsused::%player's uuid%} ? 0%&6/&f%{@maxgens} + {private::genslots::%player's uuid%}%&f&8]" to player
		draw 20 of poof at event-block with extra 0.5
		give player {public::gens::%{_tier}%::genblock}

# GENCORE ^


# - PUBLIC VARIABLES - #

function makeGen(id: number, title: text, block: itemtype, drop: itemtype, output: number, colorcode: text, price: int, listingprice: int):
	set {public::gens::%{_id}%} to {_id}
	set {public::gens::%{_id}%::output} to {_output}
	set {public::gens::%{_id}%::price} to {_output}
	set {public::gens::%{_id}%::listingprice} to {_listingprice}
	set {public::gens::%{_id}%::title} to {_title}
	set {public::gens::%{_id}%::block} to {_block}
	set {public::gens::%{_id}%::colorcode} to {_colorcode}
	set {public::gens::%{_id}%::genblock} to {_block} named "%{_title}%" with lore "&8Generator%nl%&f%nl%%{_colorcode}%&l| &fInformation%nl%%{_colorcode}%&l| &fOutput: &2$&a%modules_format({_output})%%nl%%{_colorcode}%&l| &fTier: %{_id}%"
	set {public::gens::%{_id}%::drop} to {_drop} named "%{_title}%" with lore "&8Drop%nl%&f%nl%&f%{_colorcode}%&l| &fInformation%nl%%{_colorcode}%&l| &fOutput: &2$&a%modules_format({_output})%%nl%%{_colorcode}%&l| &fTier: %{_id}%"

function makeSellwand(muti: number) :: itemtype:
	set {_item} to blaze rod named "&7&lSELLWAND" with lore "&8Sellwand%nl%&f%nl%&7&l| &fInformation%nl%&7&l| &fMutiplier: %{_muti}%%nl%&7&l| &fOutput: &2$&a0%nl%&7&l| &fItems Sold: &f0"
	return {_item}
